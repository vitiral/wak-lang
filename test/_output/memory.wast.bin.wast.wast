(module (memory $0 0 0))
(module (memory $0 0 1))
(module (memory $0 1 256))
(module (memory $0 0 65_536))
(assert_invalid (module (memory $0 0) (memory $1 0)) "multiple memories")
(assert_invalid
  (module (import "spectest" "memory" (memory $0 0)) (memory $1 0))
  "multiple memories"
)
(module
  (type $0 (func (result i32)))
  (memory $0 0 0)
  (func $0 (type 0) (memory.size))
  (export "memsize" (func 0))
  (data 0 (offset (i32.const 0)))
)
(assert_return (invoke "memsize") (i32.const 0))
(module
  (type $0 (func (result i32)))
  (memory $0 0 0)
  (func $0 (type 0) (memory.size))
  (export "memsize" (func 0))
  (data 0 (offset (i32.const 0)))
)
(assert_return (invoke "memsize") (i32.const 0))
(module
  (type $0 (func (result i32)))
  (memory $0 1 1)
  (func $0 (type 0) (memory.size))
  (export "memsize" (func 0))
  (data 0 (offset (i32.const 0)) "\78")
)
(assert_return (invoke "memsize") (i32.const 1))
(assert_invalid (module (data 0 (offset (i32.const 0)))) "unknown memory")
(assert_invalid (module (data 0 (offset (i32.const 0)))) "unknown memory")
(assert_invalid (module (data 0 (offset (i32.const 0)) "\78")) "unknown memory")
(assert_invalid
  (module (type $0 (func)) (func $0 (type 0) (i32.const 0) (f32.load) (drop)))
  "unknown memory"
)
(assert_invalid
  (module
    (type $0 (func))
    (func $0 (type 0) (i32.const 0) (f32.const 0) (f32.store))
  )
  "unknown memory"
)
(assert_invalid
  (module
    (type $0 (func))
    (func $0 (type 0) (i32.const 0) (i32.load8_s) (drop))
  )
  "unknown memory"
)
(assert_invalid
  (module
    (type $0 (func))
    (func $0 (type 0) (i32.const 0) (i32.const 0) (i32.store8))
  )
  "unknown memory"
)
(assert_invalid
  (module (type $0 (func)) (func $0 (type 0) (memory.size) (drop)))
  "unknown memory"
)
(assert_invalid
  (module
    (type $0 (func))
    (func $0 (type 0) (i32.const 0) (memory.grow) (drop))
  )
  "unknown memory"
)
(assert_invalid
  (module (memory $0 1 0))
  "size minimum must not be greater than maximum"
)
(assert_invalid
  (module (memory $0 65_537))
  "memory size must be at most 65536 pages (4GiB)"
)
(assert_invalid
  (module (memory $0 2_147_483_648))
  "memory size must be at most 65536 pages (4GiB)"
)
(assert_invalid
  (module (memory $0 4_294_967_295))
  "memory size must be at most 65536 pages (4GiB)"
)
(assert_invalid
  (module (memory $0 0 65_537))
  "memory size must be at most 65536 pages (4GiB)"
)
(assert_invalid
  (module (memory $0 0 2_147_483_648))
  "memory size must be at most 65536 pages (4GiB)"
)
(assert_invalid
  (module (memory $0 0 4_294_967_295))
  "memory size must be at most 65536 pages (4GiB)"
)
(module
  (type $0 (func (result i32)))
  (type $1 (func (result f64)))
  (type $2 (func (param i32) (result i32)))
  (type $3 (func (param i64) (result i64)))
  (memory $0 1)
  (func $0
    (type 0)
    (i32.const 0)
    (i32.load8_u)
    (i32.const 65)
    (i32.eq)
    (i32.const 3)
    (i32.load8_u)
    (i32.const 167)
    (i32.eq)
    (i32.and)
    (i32.const 6)
    (i32.load8_u)
    (i32.const 0)
    (i32.eq)
    (i32.const 19)
    (i32.load8_u)
    (i32.const 0)
    (i32.eq)
    (i32.and)
    (i32.and)
    (i32.const 20)
    (i32.load8_u)
    (i32.const 87)
    (i32.eq)
    (i32.const 23)
    (i32.load8_u)
    (i32.const 77)
    (i32.eq)
    (i32.and)
    (i32.const 24)
    (i32.load8_u)
    (i32.const 0)
    (i32.eq)
    (i32.const 1_023)
    (i32.load8_u)
    (i32.const 0)
    (i32.eq)
    (i32.and)
    (i32.and)
    (i32.and)
  )
  (func $1
    (type 1)
    (i32.const 8)
    (i64.const -12_345)
    (i64.store)
    (i32.const 8)
    (f64.load)
    (i64.const -12_345)
    (f64.reinterpret_i64)
    (f64.eq)
    (if (then (f64.const 0) (return)) (else))
    (i32.const 9)
    (i64.const 0)
    (i64.store align=1)
    (i32.const 15)
    (i32.const 16_453)
    (i32.store16 align=1)
    (i32.const 9)
    (f64.load align=1)
  )
  (func $2
    (type 2)
    (i32.const 8)
    (local.get 0)
    (i32.store8)
    (i32.const 8)
    (i32.load8_s)
  )
  (func $3
    (type 2)
    (i32.const 8)
    (local.get 0)
    (i32.store8)
    (i32.const 8)
    (i32.load8_u)
  )
  (func $4
    (type 2)
    (i32.const 8)
    (local.get 0)
    (i32.store16)
    (i32.const 8)
    (i32.load16_s)
  )
  (func $5
    (type 2)
    (i32.const 8)
    (local.get 0)
    (i32.store16)
    (i32.const 8)
    (i32.load16_u)
  )
  (func $6
    (type 3)
    (i32.const 8)
    (local.get 0)
    (i64.store8)
    (i32.const 8)
    (i64.load8_s)
  )
  (func $7
    (type 3)
    (i32.const 8)
    (local.get 0)
    (i64.store8)
    (i32.const 8)
    (i64.load8_u)
  )
  (func $8
    (type 3)
    (i32.const 8)
    (local.get 0)
    (i64.store16)
    (i32.const 8)
    (i64.load16_s)
  )
  (func $9
    (type 3)
    (i32.const 8)
    (local.get 0)
    (i64.store16)
    (i32.const 8)
    (i64.load16_u)
  )
  (func $10
    (type 3)
    (i32.const 8)
    (local.get 0)
    (i64.store32)
    (i32.const 8)
    (i64.load32_s)
  )
  (func $11
    (type 3)
    (i32.const 8)
    (local.get 0)
    (i64.store32)
    (i32.const 8)
    (i64.load32_u)
  )
  (export "data" (func 0))
  (export "cast" (func 1))
  (export "i32_load8_s" (func 2))
  (export "i32_load8_u" (func 3))
  (export "i32_load16_s" (func 4))
  (export "i32_load16_u" (func 5))
  (export "i64_load8_s" (func 6))
  (export "i64_load8_u" (func 7))
  (export "i64_load16_s" (func 8))
  (export "i64_load16_u" (func 9))
  (export "i64_load32_s" (func 10))
  (export "i64_load32_u" (func 11))
  (data 0 (offset (i32.const 0)) "\41\42\43\a7\44")
  (data 0 (offset (i32.const 20)) "\57\41\53\4d")
)
(assert_return (invoke "data") (i32.const 1))
(assert_return (invoke "cast") (f64.const 42))
(assert_return (invoke "i32_load8_s" (i32.const -1)) (i32.const -1))
(assert_return (invoke "i32_load8_u" (i32.const -1)) (i32.const 255))
(assert_return (invoke "i32_load16_s" (i32.const -1)) (i32.const -1))
(assert_return (invoke "i32_load16_u" (i32.const -1)) (i32.const 65_535))
(assert_return (invoke "i32_load8_s" (i32.const 100)) (i32.const 100))
(assert_return (invoke "i32_load8_u" (i32.const 200)) (i32.const 200))
(assert_return (invoke "i32_load16_s" (i32.const 20_000)) (i32.const 20_000))
(assert_return (invoke "i32_load16_u" (i32.const 40_000)) (i32.const 40_000))
(assert_return (invoke "i32_load8_s" (i32.const -19_110_589)) (i32.const 67))
(assert_return (invoke "i32_load8_s" (i32.const 878_104_047)) (i32.const -17))
(assert_return (invoke "i32_load8_u" (i32.const -19_110_589)) (i32.const 67))
(assert_return (invoke "i32_load8_u" (i32.const 878_104_047)) (i32.const 239))
(assert_return
  (invoke "i32_load16_s" (i32.const -19_110_589))
  (i32.const 25_923)
)
(assert_return
  (invoke "i32_load16_s" (i32.const 878_104_047))
  (i32.const -12_817)
)
(assert_return
  (invoke "i32_load16_u" (i32.const -19_110_589))
  (i32.const 25_923)
)
(assert_return
  (invoke "i32_load16_u" (i32.const 878_104_047))
  (i32.const 52_719)
)
(assert_return (invoke "i64_load8_s" (i64.const -1)) (i64.const -1))
(assert_return (invoke "i64_load8_u" (i64.const -1)) (i64.const 255))
(assert_return (invoke "i64_load16_s" (i64.const -1)) (i64.const -1))
(assert_return (invoke "i64_load16_u" (i64.const -1)) (i64.const 65_535))
(assert_return (invoke "i64_load32_s" (i64.const -1)) (i64.const -1))
(assert_return (invoke "i64_load32_u" (i64.const -1)) (i64.const 4_294_967_295))
(assert_return (invoke "i64_load8_s" (i64.const 100)) (i64.const 100))
(assert_return (invoke "i64_load8_u" (i64.const 200)) (i64.const 200))
(assert_return (invoke "i64_load16_s" (i64.const 20_000)) (i64.const 20_000))
(assert_return (invoke "i64_load16_u" (i64.const 40_000)) (i64.const 40_000))
(assert_return (invoke "i64_load32_s" (i64.const 20_000)) (i64.const 20_000))
(assert_return (invoke "i64_load32_u" (i64.const 40_000)) (i64.const 40_000))
(assert_return
  (invoke "i64_load8_s" (i64.const -81_985_529_755_441_853))
  (i64.const 67)
)
(assert_return
  (invoke "i64_load8_s" (i64.const 3_771_275_841_602_506_223))
  (i64.const -17)
)
(assert_return
  (invoke "i64_load8_u" (i64.const -81_985_529_755_441_853))
  (i64.const 67)
)
(assert_return
  (invoke "i64_load8_u" (i64.const 3_771_275_841_602_506_223))
  (i64.const 239)
)
(assert_return
  (invoke "i64_load16_s" (i64.const -81_985_529_755_441_853))
  (i64.const 25_923)
)
(assert_return
  (invoke "i64_load16_s" (i64.const 3_771_275_841_602_506_223))
  (i64.const -12_817)
)
(assert_return
  (invoke "i64_load16_u" (i64.const -81_985_529_755_441_853))
  (i64.const 25_923)
)
(assert_return
  (invoke "i64_load16_u" (i64.const 3_771_275_841_602_506_223))
  (i64.const 52_719)
)
(assert_return
  (invoke "i64_load32_s" (i64.const -81_985_529_755_441_853))
  (i64.const 1_446_274_371)
)
(assert_return
  (invoke "i64_load32_s" (i64.const 3_771_275_841_602_506_223))
  (i64.const -1_732_588_049)
)
(assert_return
  (invoke "i64_load32_u" (i64.const -81_985_529_755_441_853))
  (i64.const 1_446_274_371)
)
(assert_return
  (invoke "i64_load32_u" (i64.const 3_771_275_841_602_506_223))
  (i64.const 2_562_379_247)
)
