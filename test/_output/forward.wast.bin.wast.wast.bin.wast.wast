(module
  (type $0 (func (param i32) (result i32)))
  (func $0
    (type 0)
    (local.get 0)
    (i32.const 0)
    (i32.eq)
    (if
      (result i32)
      (then (i32.const 1))
      (else (local.get 0) (i32.const 1) (i32.sub) (call 1))
    )
  )
  (func $1
    (type 0)
    (local.get 0)
    (i32.const 0)
    (i32.eq)
    (if
      (result i32)
      (then (i32.const 0))
      (else (local.get 0) (i32.const 1) (i32.sub) (call 0))
    )
  )
  (export "even" (func 0))
  (export "odd" (func 1))
)
(assert_return (invoke "even" (i32.const 13)) (i32.const 0))
(assert_return (invoke "even" (i32.const 20)) (i32.const 1))
(assert_return (invoke "odd" (i32.const 13)) (i32.const 1))
(assert_return (invoke "odd" (i32.const 20)) (i32.const 0))
