(module
  (type $0 (func (param i32 i32 i32)))
  (type $1 (func))
  (type $2 (func (result i32)))
  (type $3 (func (result f64)))
  (type $4 (func (result i64)))
  (type $5 (func (param i32 i32) (result i32)))
  (type $6 (func (result f32)))
  (table $0 1 1 funcref)
  (memory $0 1)
  (global $0 (mut f32) (f32.const 0))
  (func $0 (type 1))
  (func $1 (type 0))
  (func $2 (type 2) (unreachable))
  (func $3 (type 2) (unreachable))
  (func $4 (type 3) (unreachable))
  (func $5 (type 3) (unreachable))
  (func $6 (type 2) (unreachable) (i32.const -1))
  (func $7 (type 2) (call 0) (unreachable) (i32.const -1))
  (func $8 (type 1) (call 0) (unreachable))
  (func $9 (type 2) (call 0) (unreachable))
  (func $10 (type 2) (block (result i32) (unreachable) (i32.const 2)))
  (func $11 (type 2) (block (result i32) (call 0) (unreachable) (i32.const 2)))
  (func $12 (type 1) (block (nop) (call 0) (unreachable)))
  (func $13 (type 2) (block (result i32) (nop) (call 0) (unreachable)))
  (func $14
    (type 2)
    (block (result i32) (call 0) (i32.const 1) (br 0) (unreachable))
  )
  (func $15 (type 2) (loop (result i32) (unreachable) (i32.const 2)))
  (func $16 (type 2) (loop (result i32) (call 0) (unreachable) (i32.const 2)))
  (func $17 (type 1) (loop (nop) (call 0) (unreachable)))
  (func $18
    (type 2)
    (block
      (result i32)
      (loop (result i32) (call 0) (i32.const 1) (br 1) (unreachable))
    )
  )
  (func $19 (type 2) (block (result i32) (unreachable) (br 0)))
  (func $20 (type 1) (block (unreachable) (br_if 0)))
  (func $21
    (type 2)
    (block
      (result i32)
      (unreachable)
      (i32.const 1)
      (br_if 0)
      (drop)
      (i32.const 7)
    )
  )
  (func $22
    (type 2)
    (block
      (result i32)
      (i32.const 6)
      (unreachable)
      (br_if 0)
      (drop)
      (i32.const 7)
    )
  )
  (func $23 (type 1) (block (unreachable) (br_table 0 0 0)))
  (func $24
    (type 2)
    (block
      (result i32)
      (unreachable)
      (i32.const 1)
      (br_table 0 0 0)
      (i32.const 7)
    )
  )
  (func $25
    (type 2)
    (block
      (result i32)
      (block (result i32) (unreachable) (i32.const 1) (br_table 0 1))
    )
  )
  (func $26
    (type 2)
    (block
      (result i32)
      (i32.const 6)
      (unreachable)
      (br_table 0 0)
      (i32.const 7)
    )
  )
  (func $27
    (type 2)
    (block (result i32) (unreachable) (br_table 0 0) (i32.const 8))
  )
  (func $28 (type 4) (unreachable) (return))
  (func $29
    (type 2)
    (unreachable)
    (if (result i32) (then (i32.const 0)) (else (i32.const 1)))
  )
  (func $30
    (type 5)
    (local.get 0)
    (if (result i32) (then (unreachable)) (else (local.get 1)))
  )
  (func $31
    (type 5)
    (local.get 0)
    (if (result i32) (then (local.get 1)) (else (unreachable)))
  )
  (func $32
    (type 5)
    (local.get 0)
    (if (then (unreachable)) (else))
    (local.get 1)
  )
  (func $33 (type 5) (unreachable) (local.get 0) (local.get 1) (select))
  (func $34 (type 5) (local.get 0) (unreachable) (local.get 1) (select))
  (func $35 (type 2) (i32.const 0) (i32.const 1) (unreachable) (select))
  (func $36 (type 1) (unreachable) (i32.const 2) (i32.const 3) (call 1))
  (func $37 (type 1) (i32.const 1) (unreachable) (i32.const 3) (call 1))
  (func $38 (type 1) (i32.const 1) (i32.const 2) (unreachable) (call 1))
  (func $39
    (type 1)
    (unreachable)
    (i32.const 1)
    (i32.const 2)
    (i32.const 3)
    (call_indirect (type 0))
  )
  (func $40
    (type 1)
    (i32.const 0)
    (unreachable)
    (i32.const 2)
    (i32.const 3)
    (call_indirect (type 0))
  )
  (func $41
    (type 1)
    (i32.const 0)
    (i32.const 1)
    (unreachable)
    (i32.const 3)
    (call_indirect (type 0))
  )
  (func $42
    (type 1)
    (i32.const 0)
    (i32.const 1)
    (i32.const 2)
    (unreachable)
    (call_indirect (type 0))
  )
  (func $43 (type 1) (local f32) (unreachable) (local.set 0))
  (func $44 (type 6) (local f32) (unreachable) (local.tee 0))
  (func $45 (type 6) (unreachable) (global.set 0))
  (func $46 (type 6) (unreachable) (f32.load))
  (func $47 (type 4) (unreachable) (i64.load8_s))
  (func $48 (type 1) (unreachable) (f64.const 7) (f64.store))
  (func $49 (type 1) (i32.const 2) (unreachable) (i64.store))
  (func $50 (type 1) (unreachable) (i32.const 7) (i32.store8))
  (func $51 (type 1) (i32.const 2) (unreachable) (i64.store16))
  (func $52 (type 6) (unreachable) (f32.neg))
  (func $53 (type 2) (unreachable) (i32.const 10) (i32.add))
  (func $54 (type 4) (i64.const 10) (unreachable) (i64.sub))
  (func $55 (type 2) (unreachable) (i32.eqz))
  (func $56 (type 2) (unreachable) (f64.const 10) (f64.le))
  (func $57 (type 2) (f32.const 10) (unreachable) (f32.ne))
  (func $58 (type 2) (unreachable) (i32.wrap_i64))
  (func $59 (type 2) (unreachable) (memory.grow))
  (export "type-i32" (func 2))
  (export "type-i64" (func 3))
  (export "type-f32" (func 4))
  (export "type-f64" (func 5))
  (export "as-func-first" (func 6))
  (export "as-func-mid" (func 7))
  (export "as-func-last" (func 8))
  (export "as-func-value" (func 9))
  (export "as-block-first" (func 10))
  (export "as-block-mid" (func 11))
  (export "as-block-last" (func 12))
  (export "as-block-value" (func 13))
  (export "as-block-broke" (func 14))
  (export "as-loop-first" (func 15))
  (export "as-loop-mid" (func 16))
  (export "as-loop-last" (func 17))
  (export "as-loop-broke" (func 18))
  (export "as-br-value" (func 19))
  (export "as-br_if-cond" (func 20))
  (export "as-br_if-value" (func 21))
  (export "as-br_if-value-cond" (func 22))
  (export "as-br_table-index" (func 23))
  (export "as-br_table-value" (func 24))
  (export "as-br_table-value-2" (func 25))
  (export "as-br_table-value-index" (func 26))
  (export "as-br_table-value-and-index" (func 27))
  (export "as-return-value" (func 28))
  (export "as-if-cond" (func 29))
  (export "as-if-then" (func 30))
  (export "as-if-else" (func 31))
  (export "as-if-then-no-else" (func 32))
  (export "as-select-first" (func 33))
  (export "as-select-second" (func 34))
  (export "as-select-cond" (func 35))
  (export "as-call-first" (func 36))
  (export "as-call-mid" (func 37))
  (export "as-call-last" (func 38))
  (export "as-call_indirect-func" (func 39))
  (export "as-call_indirect-first" (func 40))
  (export "as-call_indirect-mid" (func 41))
  (export "as-call_indirect-last" (func 42))
  (export "as-local.set-value" (func 43))
  (export "as-local.tee-value" (func 44))
  (export "as-global.set-value" (func 45))
  (export "as-load-address" (func 46))
  (export "as-loadN-address" (func 47))
  (export "as-store-address" (func 48))
  (export "as-store-value" (func 49))
  (export "as-storeN-address" (func 50))
  (export "as-storeN-value" (func 51))
  (export "as-unary-operand" (func 52))
  (export "as-binary-left" (func 53))
  (export "as-binary-right" (func 54))
  (export "as-test-operand" (func 55))
  (export "as-compare-left" (func 56))
  (export "as-compare-right" (func 57))
  (export "as-convert-operand" (func 58))
  (export "as-memory.grow-size" (func 59))
  (elem 0 (offset (i32.const 0)) 1)
)
(assert_trap (invoke "type-i32") "unreachable")
(assert_trap (invoke "type-i64") "unreachable")
(assert_trap (invoke "type-f32") "unreachable")
(assert_trap (invoke "type-f64") "unreachable")
(assert_trap (invoke "as-func-first") "unreachable")
(assert_trap (invoke "as-func-mid") "unreachable")
(assert_trap (invoke "as-func-last") "unreachable")
(assert_trap (invoke "as-func-value") "unreachable")
(assert_trap (invoke "as-block-first") "unreachable")
(assert_trap (invoke "as-block-mid") "unreachable")
(assert_trap (invoke "as-block-last") "unreachable")
(assert_trap (invoke "as-block-value") "unreachable")
(assert_return (invoke "as-block-broke") (i32.const 1))
(assert_trap (invoke "as-loop-first") "unreachable")
(assert_trap (invoke "as-loop-mid") "unreachable")
(assert_trap (invoke "as-loop-last") "unreachable")
(assert_return (invoke "as-loop-broke") (i32.const 1))
(assert_trap (invoke "as-br-value") "unreachable")
(assert_trap (invoke "as-br_if-cond") "unreachable")
(assert_trap (invoke "as-br_if-value") "unreachable")
(assert_trap (invoke "as-br_if-value-cond") "unreachable")
(assert_trap (invoke "as-br_table-index") "unreachable")
(assert_trap (invoke "as-br_table-value") "unreachable")
(assert_trap (invoke "as-br_table-value-2") "unreachable")
(assert_trap (invoke "as-br_table-value-index") "unreachable")
(assert_trap (invoke "as-br_table-value-and-index") "unreachable")
(assert_trap (invoke "as-return-value") "unreachable")
(assert_trap (invoke "as-if-cond") "unreachable")
(assert_trap (invoke "as-if-then" (i32.const 1) (i32.const 6)) "unreachable")
(assert_return (invoke "as-if-then" (i32.const 0) (i32.const 6)) (i32.const 6))
(assert_trap (invoke "as-if-else" (i32.const 0) (i32.const 6)) "unreachable")
(assert_return (invoke "as-if-else" (i32.const 1) (i32.const 6)) (i32.const 6))
(assert_trap
  (invoke "as-if-then-no-else" (i32.const 1) (i32.const 6))
  "unreachable"
)
(assert_return
  (invoke "as-if-then-no-else" (i32.const 0) (i32.const 6))
  (i32.const 6)
)
(assert_trap
  (invoke "as-select-first" (i32.const 0) (i32.const 6))
  "unreachable"
)
(assert_trap
  (invoke "as-select-first" (i32.const 1) (i32.const 6))
  "unreachable"
)
(assert_trap
  (invoke "as-select-second" (i32.const 0) (i32.const 6))
  "unreachable"
)
(assert_trap
  (invoke "as-select-second" (i32.const 1) (i32.const 6))
  "unreachable"
)
(assert_trap (invoke "as-select-cond") "unreachable")
(assert_trap (invoke "as-call-first") "unreachable")
(assert_trap (invoke "as-call-mid") "unreachable")
(assert_trap (invoke "as-call-last") "unreachable")
(assert_trap (invoke "as-call_indirect-func") "unreachable")
(assert_trap (invoke "as-call_indirect-first") "unreachable")
(assert_trap (invoke "as-call_indirect-mid") "unreachable")
(assert_trap (invoke "as-call_indirect-last") "unreachable")
(assert_trap (invoke "as-local.set-value") "unreachable")
(assert_trap (invoke "as-local.tee-value") "unreachable")
(assert_trap (invoke "as-global.set-value") "unreachable")
(assert_trap (invoke "as-load-address") "unreachable")
(assert_trap (invoke "as-loadN-address") "unreachable")
(assert_trap (invoke "as-store-address") "unreachable")
(assert_trap (invoke "as-store-value") "unreachable")
(assert_trap (invoke "as-storeN-address") "unreachable")
(assert_trap (invoke "as-storeN-value") "unreachable")
(assert_trap (invoke "as-unary-operand") "unreachable")
(assert_trap (invoke "as-binary-left") "unreachable")
(assert_trap (invoke "as-binary-right") "unreachable")
(assert_trap (invoke "as-test-operand") "unreachable")
(assert_trap (invoke "as-compare-left") "unreachable")
(assert_trap (invoke "as-compare-right") "unreachable")
(assert_trap (invoke "as-convert-operand") "unreachable")
(assert_trap (invoke "as-memory.grow-size") "unreachable")
