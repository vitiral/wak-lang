(module
  (type $0 (func (result i32)))
  (type $1 (func (param i32)))
  (memory $0 0)
  (func $0 (type 0) (memory.size))
  (func $1 (type 1) (local.get 0) (memory.grow) (drop))
  (export "size" (func 0))
  (export "grow" (func 1))
)
(assert_return (invoke "size") (i32.const 0))
(assert_return (invoke "grow" (i32.const 1)))
(assert_return (invoke "size") (i32.const 1))
(assert_return (invoke "grow" (i32.const 4)))
(assert_return (invoke "size") (i32.const 5))
(assert_return (invoke "grow" (i32.const 0)))
(assert_return (invoke "size") (i32.const 5))
(module
  (type $0 (func (result i32)))
  (type $1 (func (param i32)))
  (memory $0 1)
  (func $0 (type 0) (memory.size))
  (func $1 (type 1) (local.get 0) (memory.grow) (drop))
  (export "size" (func 0))
  (export "grow" (func 1))
)
(assert_return (invoke "size") (i32.const 1))
(assert_return (invoke "grow" (i32.const 1)))
(assert_return (invoke "size") (i32.const 2))
(assert_return (invoke "grow" (i32.const 4)))
(assert_return (invoke "size") (i32.const 6))
(assert_return (invoke "grow" (i32.const 0)))
(assert_return (invoke "size") (i32.const 6))
(module
  (type $0 (func (result i32)))
  (type $1 (func (param i32)))
  (memory $0 0 2)
  (func $0 (type 0) (memory.size))
  (func $1 (type 1) (local.get 0) (memory.grow) (drop))
  (export "size" (func 0))
  (export "grow" (func 1))
)
(assert_return (invoke "size") (i32.const 0))
(assert_return (invoke "grow" (i32.const 3)))
(assert_return (invoke "size") (i32.const 0))
(assert_return (invoke "grow" (i32.const 1)))
(assert_return (invoke "size") (i32.const 1))
(assert_return (invoke "grow" (i32.const 0)))
(assert_return (invoke "size") (i32.const 1))
(assert_return (invoke "grow" (i32.const 4)))
(assert_return (invoke "size") (i32.const 1))
(assert_return (invoke "grow" (i32.const 1)))
(assert_return (invoke "size") (i32.const 2))
(module
  (type $0 (func (result i32)))
  (type $1 (func (param i32)))
  (memory $0 3 8)
  (func $0 (type 0) (memory.size))
  (func $1 (type 1) (local.get 0) (memory.grow) (drop))
  (export "size" (func 0))
  (export "grow" (func 1))
)
(assert_return (invoke "size") (i32.const 3))
(assert_return (invoke "grow" (i32.const 1)))
(assert_return (invoke "size") (i32.const 4))
(assert_return (invoke "grow" (i32.const 3)))
(assert_return (invoke "size") (i32.const 7))
(assert_return (invoke "grow" (i32.const 0)))
(assert_return (invoke "size") (i32.const 7))
(assert_return (invoke "grow" (i32.const 2)))
(assert_return (invoke "size") (i32.const 7))
(assert_return (invoke "grow" (i32.const 1)))
(assert_return (invoke "size") (i32.const 8))
(assert_invalid
  (module (type $0 (func)) (memory $0 1) (func $0 (type 0) (memory.size)))
  "type mismatch"
)
(assert_invalid
  (module
    (type $0 (func (result f32)))
    (memory $0 1)
    (func $0 (type 0) (memory.size))
  )
  "type mismatch"
)
